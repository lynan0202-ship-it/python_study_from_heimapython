"""
函数解释:
    概述:
        函数也叫方法, 就是把 一些具有独立功能的代码封装到一起, 使其称为具有特殊功能的代码集.
        函数: function,  方法: method
    例如:
        独立功能: 拿牙刷, 挤牙膏, 刷上排牙, 刷下排牙, 漱口
        代码集:   刷牙
    作用:
        1. 模块化编程, 方便我们进行管理.
        2. 提高代码的复用性.
    格式:
        def 函数名(形式参数1, 形式参数2...):
            函数体
            return 具体的返回值
    格式解释:
        def         固定写法, defined, 定义的意思.
        函数名       类似于变量名, 见名知意即可.
        形参列表     表示调用函数, 应该传入什么内容(值)
        函数体       具体的逻辑代码, 就是以前我们写的if, while, for, 容器...
        return      作用1: 结束方法的(类似于break)   作用2: 可以把函数的执行结果进行返回.

    细节:
        1. 函数必须先定义, 然后才能调用.
        2. 定义函数小技巧, 三个明确:
            明确函数名
            明确形参列表
            明确返回值
        3. 调用函数小技巧, 三个步骤
            写 函数名()
            传参, 要什么给什么, 不要就不给.
            接收返回值, 返回什么就接收什么, 不给就不接收.
        4. 如果函数没有明确的返回值, 则return可以省略不写.
        5. 函数必须调用, 才会执行.
"""

# 需求: 模拟基站工作流程, 给 刘亦菲 打电话
print('----- 拨号 -----')
print('拨号方手机 发送信号包 到就近的基站')
print('拨号方就近基站 会解析信号包, 找到 接收方就近的基站')
print('两个基站之间通过 底下电缆的形式 传输信号包')
print('接收方就近的基站 发送信号包到 接收方手机')
print('----- 忙音等待, 嘟嘟嘟 -----')
print('*' * 28)

# 需求: 模拟基站工作流程, 给 胡歌 打电话
print('----- 拨号 -----')
print('拨号方手机 发送信号包 到就近的基站')
print('拨号方就近基站 会解析信号包, 找到 接收方就近的基站')
print('两个基站之间通过 底下电缆的形式 传输信号包')
print('接收方就近的基站 发送信号包到 接收方手机')
print('----- 忙音等待, 嘟嘟嘟 -----')
print('*' * 28)


# 虽然上述的代码实现了需求, 但是 实际开发中, 同样功能的代码绝对不会写两次. 我们可以通过 函数 来优化它.
# 定义函数.
def call():
    print('----- 拨号 -----')
    print('拨号方手机 发送信号包 到就近的基站')
    print('拨号方就近基站 会解析信号包, 找到 接收方就近的基站')
    print('两个基站之间通过 底下电缆的形式 传输信号包')
    print('接收方就近的基站 发送信号包到 接收方手机')
    print('----- 忙音等待, 嘟嘟嘟 -----')
    print('*' * 28)
    # return      # 没有返回值, 可以省略不写.

# 调用函数.
call()
call()