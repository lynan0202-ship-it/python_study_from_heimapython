"""
需求1: while循环 计算 1 ~ 100之间的数字和.  5050
需求2: while循环 计算 1 ~ 100之间的偶数和.  2550        奇数和: 2500

循环求和思路, 细节如下:
    1. 求和变量 要定义到循环的 外边.
    2. 循环内部是具体的 计算过程.
    3. 计算完毕后, 在循环外打印结果即可
"""

# 需求1: while循环 计算 1 ~ 100之间的数字和.
# 1. 定义求和变量sum, 记录数字的累加和.
sum = 0

# 2. 定义变量i, 表示 while循环的 初始化条件, 且 i是从1开始获取的.
i = 1

# 3. 通过 while循环, 获取到 1 ~ 100之间所有的数字.
while i <= 100:     # i的值: 1, 2, 3, 4, 5......
    # 4. 具体的累加(求和)动作, 将获取到的数字 累加给 sum
    # print(i)
    sum = sum + i

    # 5. 每次操作完毕后, 记得 修改初始化条件的值, 即: 这步是 控制条件.
    i += 1

# 6. 循环执行结束后, 打印结果即可.
print(f'1 ~ 100之间的数字和为: {sum}')
print('-' * 28)



# 需求2: while循环 计算 1 ~ 100之间的偶数和.
# 思路1: 加入if判断.
# 1. 定义求和变量sum, 记录数字的累加和.
sum = 0
# 2. 定义变量i, 表示 while循环的 初始化条件, 且 i是从1开始获取的.
i = 1

# 3. 通过 while循环, 获取到 1 ~ 100之间所有的数字.
while i <= 100:     # i的值: 1, 2, 3, 4, 5......
    # 4. 具体的累加(求和)动作, 判断是否是偶数, 如果是, 将获取到的数字 累加给 sum
    if i % 2 == 0:
        sum = sum + i

    # 5. 每次操作完毕后, 记得 修改初始化条件的值, 即: 这步是 控制条件.
    i += 1

# 6. 循环执行结束后, 打印结果即可.
print(f'1 ~ 100之间的数字和为: {sum}')



# 思路2: 初始化值从0开始数, 每次加 += 2
# 1. 定义求和变量sum, 记录数字的累加和.
sum = 0
# 2. 定义变量i, 表示 while循环的 初始化条件, 且 i是从0开始获取的.
i = 2
# 3. 通过 while循环, 获取到 1 ~ 100之间所有的数字.
while i <= 100:     # i的值: 1, 2, 3, 4, 5......
    # 4. 具体的累加(求和)动作.
    sum = sum + i

    # 5. 每次操作完毕后, 记得 修改初始化条件的值, 即: 用于更新 判断条件的结果.
    i += 2

# 6. 循环执行结束后, 打印结果即可.
print(f'1 ~ 100之间的数字和为: {sum}')
