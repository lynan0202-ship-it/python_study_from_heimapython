"""
元组详解:
    概述:
        它属于容器类型的一种, 属于 不可变类型.
        它也可以同时存储多个元素, 可以是不同类型的, 实际开发中, 建议存储: 相同类型的多个值.
    特点:
        元组和列表的区别, 元组用小括号来表示, 且元组的 元素值不允许修改.
    定义格式:
        t1 = (值1, 值2, 值3...)                        列表: list1 = [值1, 值2, 值3...]
        t2 = tuple()                                  列表: list2 = list()
        t3 = (值1, )
    细节:
        1. 元组属于不可变类型, 其元素值不能更改.
        2. 元组和列表一致, 也是有索引的概念的.
        3. 定义元组时, 如果只有1个值, 则该值的末尾必须要加 逗号, 否则: 就是在定义1个普通的变量(即: 不是元组)
"""

# 1. 演示元组的定义格式.
t1 = (10, 20.3, True, 'abc')
t2 = tuple()
t3 = (10, )
t4 = (10)   # 它等价于 t4 = 10  这只是在定义1个普通的变量, 而不是定义元组.

# 2. 打印元组的内容.
print(t1)
print(t2)
print(t3)
print(t4)

# 3. 打印上述几个变量的 数据类型.
print(type(t1)) # <class 'tuple'>
print(type(t2)) # <class 'tuple'>
print(type(t3)) # <class 'tuple'>
print(type(t4)) # <class 'int'>
print('-' * 28)


# 4. 和列表, 字符串一样, 元组也是支持函数的, 例如: index(), count(), len()
t5 = ('a', 'b', 'c', 'd', 'e', 'b', 'd')

# 根据索引, 获取元组的内容.
print(t5.index('b'))     # 1
# print(t5.index('f'))     # 找不到, 就报错.

# count(), 统计元组中元素的个数.
print(t5.count('b'))    # 2

# len(), 统计元组的长度, 即: 元组的元素个数.
print(len(t5))

# 元组也支持索引, 可以通过 元组名[索引] 的方式获取数据.
print(t5[3])            # d


# 元组和列表最大的区别: 元组属于不可变类型, 其元素值不能改变.
# t5[1] = 'bb'
print(t5)