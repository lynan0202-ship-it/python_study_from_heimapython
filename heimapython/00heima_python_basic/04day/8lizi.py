'''
1. 二维列表（最常用）
类比矩阵、点云坐标、机器人关节角度序列，结构如下：

'''

# 示例1：3个点的3D坐标（点云简化数据）
point_cloud1 = [[1.2, 3.4, 2.1], [2.5, 4.1, 3.3], [0.8, 2.9, 1.7]]

# 示例2：机器人3个关节的角度序列（3个时间步）
joint_angles = [[0.1, 0.3, -0.2], [0.2, 0.4, -0.1], [0.3, 0.5, 0.0]]

# 示例3：2x3矩阵（深度学习中权重矩阵简化）
matrix = [[1, 2, 3], [4, 5, 6]]

# 2个点云帧，每个帧有2个3D点
multi_frame_point_cloud = [
    [[1.2, 3.4, 2.1], [2.5, 4.1, 3.3]],  # 第1帧
    [[1.3, 3.5, 2.2], [2.6, 4.2, 3.4]]   # 第2帧
]

point_cloud = [[1.2, 3.4, 2.1], [2.5, 4.1, 3.3], [0.8, 2.9, 1.7]]
print(point_cloud[0])          # 访问第1个点的坐标：[1.2, 3.4, 2.1]
print(point_cloud[1][2])       # 访问第2个点的z坐标：3.3
print(multi_frame_point_cloud[1][0][1])  # 第2帧第1个点的y坐标：3.5

# 给点云新增1个点
point_cloud.append([1.5, 3.2, 2.4])  # 结果：[[1.2,3.4,2.1], [2.5,4.1,3.3], [0.8,2.9,1.7], [1.5,3.2,2.4]]

# 给第1个点新增一个维度（如RGB值）
point_cloud[0].append(255)  # 结果：[1.2, 3.4, 2.1, 255]
print(point_cloud[0])

'''
[1.2, 3.4, 2.1]
3.3
3.5
[1.2, 3.4, 2.1, 255]
'''
# 修正第3个点的x坐标
point_cloud[2][0] = 0.9  # 结果：[0.9, 2.9, 1.7]
print(point_cloud[2])

# 修改机器人第2个时间步的第2个关节角度
joint_angles[1][1] = 0.45  # 结果：[0.2, 0.45, -0.1]
print(point_cloud[1])
'''
[0.9, 2.9, 1.7]
[2.5, 4.1, 3.3]
'''
point_cloud2 = [[1.2, 3.4, 2.1], [2.5, 4.1, 3.3], [0.8, 2.9, 1.7]]
# 遍历点云，打印每个点的坐标
for point in point_cloud2:
    x, y, z = point  # 解包3D坐标
    print(f"点坐标：x={x}, y={y}, z={z}")
'''
点坐标：x=1.2, y=3.4, z=2.1
点坐标：x=2.5, y=4.1, z=3.3
点坐标：x=0.8, y=2.9, z=1.7
'''
# 遍历机器人关节角度，计算每个时间步的关节角度和
for step, angles in enumerate(joint_angles):
    total = sum(angles)
    print(f"第{step+1}步关节角度和：{total}")
'''
第1步关节角度和：0.2
第2步关节角度和：0.55
第3步关节角度和：0.8
'''