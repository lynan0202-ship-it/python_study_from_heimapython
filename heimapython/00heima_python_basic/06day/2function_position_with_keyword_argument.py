"""
代码名称：位置参数与关键字参数示例
知识要点总结：
1. 位置参数：按定义顺序传递，必须与形参顺序和数量一致
2. 关键字参数：通过参数名指定值，顺序可任意
3. 混合使用：位置参数必须在前，关键字参数在后
4. 参数传递的常见错误和正确用法

代码总体逻辑说明：
1. 定义一个打印用户信息的函数，包含三个参数
2. 展示位置参数的正确和错误用法
3. 展示关键字参数的正确用法
4. 展示混合使用的正确和错误用法
5. 通过实际调用演示各种参数传递方式的效果
"""


def user_info(name, age, address):
    """
    打印用户信息

    参数:
        name (str): 用户姓名
        age (int): 用户年龄
        address (str): 用户地址
    """
    print(f"姓名：{name}，年龄：{age}，地址：{address}")


# 主程序入口
if __name__ == '__main__':
    print("=== 位置参数演示 ===")

    # 正确的位置参数调用 - 顺序和数量与形参完全一致
    user_info("张三", 23, "北京")  # 输出：姓名：张三，年龄：23，地址：北京
    user_info("张三", 23, "北京")
    # 错误的位置参数调用 - 顺序错误导致数据混乱
    # user_info("张三", "北京", 23)  # 如果取消注释，会看到年龄显示为"北京"，地址显示为23

    print("\n=== 关键字参数演示 ===")

    # 纯关键字参数调用 - 顺序可以任意，通过参数名准确指定
    user_info(address="上海", name="李四", age=25)  # 输出：姓名：李四，年龄：25，地址：上海
    user_info(name="王五", address="广州", age=24)  # 顺序不同，但结果正确

    print("\n=== 混合参数演示 ===")

    # 正确混合使用 - 位置参数在前，关键字参数在后
    user_info("赵六", age=26, address="深圳")  # "赵六"是位置参数，对应name

    # 错误的混合使用示例（注释掉的代码）
    # user_info(address="杭州", "孙七", 27)  # 错误：关键字参数不能在位置参数前面
    # user_info("周八", 28, address="南京", name="错误")  # 错误：重复为name参数赋值

"""
代码测试及验证建议方案：
1. 测试位置参数的正确使用：观察当参数顺序与形参一致时的正确输出
2. 测试位置参数的顺序错误：取消注释错误示例，观察参数混乱的结果
3. 测试关键字参数的灵活性：使用不同顺序的关键字参数调用，验证输出结果一致
4. 测试混合使用的规则：验证位置参数在前、关键字参数在后的正确用法
5. 测试参数传递的边界情况：尝试注释掉的错误示例，理解Python的错误提示

易错点提醒：
1. 位置参数必须严格按照形参顺序传递
2. 关键字参数可以在位置参数之后任意顺序使用
3. 不能重复为同一个参数赋值（不能同时使用位置和关键字为同一参数传值）
4. 关键字参数不能出现在位置参数之前
"""